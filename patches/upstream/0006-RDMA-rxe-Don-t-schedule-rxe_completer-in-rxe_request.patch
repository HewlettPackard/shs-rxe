Now that rxe_completer() is always called serially after
rxe_requester() there is no reason to schedule rxe_completer()
from rxe_requester().

Signed-off-by: Bob Pearson <rpearsonhpe@gmail.com>
---
 drivers/infiniband/sw/rxe/rxe_net.c | 6 ------
 drivers/infiniband/sw/rxe/rxe_req.c | 9 ++-------
 2 files changed, 2 insertions(+), 13 deletions(-)

diff --git a/drivers/infiniband/sw/rxe/rxe_net.c b/drivers/infiniband/sw/rxe/rxe_net.c
index 928508558df4..a2fc118e7ec1 100644
--- a/drivers/infiniband/sw/rxe/rxe_net.c
+++ b/drivers/infiniband/sw/rxe/rxe_net.c
@@ -436,7 +436,7 @@ static int rxe_loopback(struct sk_buff *skb, struct rxe_pkt_info *pkt)
	/* remove udp header */
	skb_pull(skb, sizeof(struct udphdr));

-	rxe_rcv(skb);
+	rxe_udp_encap_recv(NULL, skb);
	return 0;

 drop:
@@ -440,12 +440,6 @@ int rxe_xmit_packet(struct rxe_qp *qp, struct rxe_pkt_info *pkt,
		return err;
	}

-	if ((qp_type(qp) != IB_QPT_RC) &&
-	    (pkt->mask & RXE_END_MASK)) {
-		pkt->wqe->state = wqe_state_done;
-		rxe_sched_task(&qp->send_task);
-	}
-
	rxe_counter_inc(rxe, RXE_CNT_SENT_PKTS);
	goto done;

diff --git a/drivers/infiniband/sw/rxe/rxe_req.c b/drivers/infiniband/sw/rxe/rxe_req.c
index e20462c3040d..34c55dee0774 100644
--- a/drivers/infiniband/sw/rxe/rxe_req.c
+++ b/drivers/infiniband/sw/rxe/rxe_req.c
@@ -545,6 +545,8 @@ static void update_wqe_state(struct rxe_qp *qp,
	if (pkt->mask & RXE_END_MASK) {
		if (qp_type(qp) == IB_QPT_RC)
			wqe->state = wqe_state_pending;
+		else
+			wqe->state = wqe_state_done;
	} else {
		wqe->state = wqe_state_processing;
	}
@@ -761,12 +763,6 @@ static int rxe_do_local_ops(struct rxe_qp *qp, struct rxe_send_wqe *wqe)
	wqe->status = IB_WC_SUCCESS;
	qp->req.wqe_index = queue_next_index(qp->sq.queue, qp->req.wqe_index);

-	/* There is no ack coming for local work requests
-	 * which can lead to a deadlock. So go ahead and complete
-	 * it now.
-	 */
-	rxe_sched_task(&qp->send_task);
-
	return 0;
 }

@@ -786,7 +780,6 @@ static void fake_udp_send(struct rxe_qp *qp, struct rxe_send_wqe *wqe)
					qp->req.wqe_index);
	wqe->state = wqe_state_done;
	wqe->status = IB_WC_SUCCESS;
-	rxe_sched_task(&qp->send_task);
 }

 int rxe_requester(struct rxe_qp *qp)
--
2.43.0

