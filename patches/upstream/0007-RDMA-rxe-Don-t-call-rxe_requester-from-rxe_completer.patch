From f27fd83171a738a8f40d16f88599390bcf497ef0 Mon Sep 17 00:00:00 2001
From: Bob Pearson <rpearsonhpe@gmail.com>
Date: Sat, 16 Mar 2024 21:09:11 -0500
Subject: [PATCH 06/12] RDMA/rxe: Don't reschedule rxe_requester() from
 rxe_completer()

Instead of rescheduling rxe_requester from rxe_completer() just
extend the duration of rxe_sender() by one pass.

Signed-off-by: Bob Pearson <rpearsonhpe@gmail.com>
---
 drivers/infiniband/sw/rxe/rxe_comp.c | 18 +++++++++++-------
 1 file changed, 11 insertions(+), 7 deletions(-)

diff --git a/drivers/infiniband/sw/rxe/rxe_comp.c b/drivers/infiniband/sw/rxe/rxe_comp.c
index 58e3af78868f..b3cdaafe670d 100644
--- a/drivers/infiniband/sw/rxe/rxe_comp.c
+++ b/drivers/infiniband/sw/rxe/rxe_comp.c
@@ -325,7 +327,7 @@ static inline enum comp_state check_ack(struct rxe_qp *qp,
					qp->comp.psn = pkt->psn;
					if (qp->req.wait_psn) {
						qp->req.wait_psn = 0;
-						rxe_sched_task(&qp->send_task);
+						qp->comp.run_req_again =1;
					}
				}
				return COMPST_ERROR_RETRY;
@@ -476,7 +478,7 @@ static void do_complete(struct rxe_qp *qp, struct rxe_send_wqe *wqe)
	 */
	if (qp->req.wait_fence) {
		qp->req.wait_fence = 0;
-		rxe_sched_task(&qp->send_task);
+		qp->comp.run_req_again = 1;
	}
 }

@@ -515,7 +517,7 @@ static inline enum comp_state complete_ack(struct rxe_qp *qp,
		if (qp->req.need_rd_atomic) {
			qp->comp.timeout_retry = 0;
			qp->req.need_rd_atomic = 0;
-			rxe_sched_task(&qp->send_task);
+			qp->comp.run_req_again = 1;
		}
	}

@@ -541,7 +543,7 @@ static inline enum comp_state complete_wqe(struct rxe_qp *qp,

		if (qp->req.wait_psn) {
			qp->req.wait_psn = 0;
-			rxe_sched_task(&qp->send_task);
+			qp->comp.run_req_again = 1;
		}
	}

@@ -673,6 +675,7 @@ int rxe_completer(struct rxe_qp *qp)
		qp->comp.timeout_retry = 0;
	}

+	/* don't run until requester has finished a retry flow */
	if (qp->req.need_retry)
		goto exit;

@@ -737,7 +740,7 @@ int rxe_completer(struct rxe_qp *qp)

			if (qp->req.wait_psn) {
				qp->req.wait_psn = 0;
-				rxe_sched_task(&qp->send_task);
+				qp->comp.run_req_again = 1;
			}

			state = COMPST_DONE;
@@ -792,7 +795,7 @@ int rxe_completer(struct rxe_qp *qp)
							RXE_CNT_COMP_RETRY);
					qp->req.need_retry = 1;
					qp->comp.started_retry = 1;
-					rxe_sched_task(&qp->send_task);
+					qp->comp.run_req_again = 1;
				}
				goto done;

@@ -843,8 +846,9 @@ int rxe_completer(struct rxe_qp *qp)
	ret = 0;
	goto out;
 exit:
-	ret = -EAGAIN;
+	ret = (qp->comp.run_req_again) ? 0 : -EAGAIN;
 out:
+	qp->comp.run_req_again = 0;
	if (pkt)
		free_pkt(pkt);
	return ret;
diff --git a/drivers/infiniband/sw/rxe/rxe_verbs.h b/drivers/infiniband/sw/rxe/rxe_verbs.h
index 58e3af78868f..b3cdaafe670d 100644
--- a/drivers/infiniband/sw/rxe/rxe_verbs.h
+++ b/drivers/infiniband/sw/rxe/rxe_verbs.h
@@ -124,6 +124,7 @@ struct rxe_comp_info {
	int			started_retry;
	u32			retry_cnt;
	u32			rnr_retry;
+	int			run_req_again;
 };

 enum rdatm_res_state {
--
2.40.1

