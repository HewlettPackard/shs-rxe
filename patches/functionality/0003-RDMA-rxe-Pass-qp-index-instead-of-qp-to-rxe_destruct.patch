From 6d3cf2aa0c5d467762769b714a1ad0c17fb5651e Mon Sep 17 00:00:00 2001
From: Bob Pearson <rpearsonhpe@gmail.com>
Date: Wed, 5 Jul 2023 13:37:32 -0500
Subject: [PATCH 3/3] RDMA/rxe: Pass qp index instead of qp to rxe_destructor
Subject:  All except fix for redundant free in error is upstream
diff --git a/rxe/rxe_net.c b/rxe/rxe_net.c
index a21fc56..8d80602 100644
--- a/rxe/rxe_net.c
+++ b/rxe/rxe_net.c
@@ -593,8 +596,7 @@ static int rxe_loopback(struct sk_buff *skb, struct rxe_pkt_info *pkt)

	if (WARN_ON(!ib_device_try_get(&pkt->rxe->ib_dev))) {
		kfree_skb(skb);
-		err = -EINVAL;
-		goto drop;
+		return -EINVAL;
	}

	/* remove udp header */
@@ -602,9 +604,6 @@ static int rxe_loopback(struct sk_buff *skb, struct rxe_pkt_info *pkt)
	rxe_udp_encap_recv(NULL, skb);

	return 0;
-drop:
-	kfree_skb(skb);
-	return err;
 }

 int rxe_xmit_packet(struct rxe_qp *qp, struct rxe_pkt_info *pkt,
diff --git a/rxe/rxe_net.c b/rxe/rxe_net.c
index 4d67675..efa92f5 100644
--- a/rxe/rxe_net.c
+++ b/rxe/rxe_net.c
@@ -591,7 +591,6 @@ static int rxe_loopback(struct sk_buff *skb, struct rxe_pkt_info *pkt)
 {
 	struct sock *sk = pkt->qp->sk->sk;
 	struct rxe_pkt_info *newpkt;
-	int err;
 
 	sock_hold(sk);
 	skb->sk = sk;
